{"version":3,"file":"static/js/186.5660237b.chunk.js","mappings":"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","sources":["components/loading/loader.tsx","components/buttons/startPageButton.tsx","components/input/landing/landingInput.tsx","components/buttons/goButton.tsx","features/regex/regex.ts","pages/start/forms/loginForm/login.tsx","pages/start/forms/registerForm/register.tsx","pages/start/startPage.tsx"],"sourcesContent":["import {  Puff } from \"react-loader-spinner\";\r\nimport { FC } from \"react\";\r\n\r\nconst Loading:FC = () => {\r\n    return (\r\n      <div className=\"w-screen h-screen flex items-center justify-center bg-black opacity-80\">\r\n        <Puff\r\n          visible={true}\r\n          height=\"180\"\r\n          width=\"1000\"\r\n          ariaLabel=\"dna-loading\"\r\n          wrapperStyle={{}}\r\n          wrapperClass=\"dna-wrapper\"\r\n          color=\"#00D7FF\"\r\n        />\r\n      </div>\r\n    );\r\n}\r\nexport default Loading;","type startButtonProps = {\r\n  title: string;\r\n  fn: () => void;\r\n  activeClass: boolean;\r\n};\r\nexport const StartPageButton = ({ title, fn, activeClass }: startButtonProps) => {\r\n  return (\r\n    <button\r\n      className={`border-orange border-2  rounded text-base  font-medium  leading-tight text-center\r\n       w-32 h-8 ${\r\n         activeClass\r\n           ? \"scale-110 bg-orange shadow-md shadow-orange text-white\"\r\n           : \"text-gray shadow-md shadow-gray\"\r\n       }`}\r\n      onClick={fn}\r\n    >\r\n      {title}\r\n    </button>\r\n  );\r\n};\r\n","type inputProps = {\r\n  title: string;\r\n  name: string;\r\n  required?: boolean;\r\n  type: string;\r\n  pattern?: string;\r\n  autocomplete?: string;\r\n};\r\n\r\nconst Input = ({\r\n  title,\r\n  name,\r\n  required,\r\n  type,\r\n  pattern,\r\n  autocomplete,\r\n}: inputProps) => {\r\n  return (\r\n    <input\r\n      name={name}\r\n      className=\"border-b-2 border-azure text-azure placeholder:text-azure outline-0 text-lg pl-2 w-full bg-transparent lg:w-3/6\"\r\n      placeholder={title}\r\n      required={required}\r\n      type={type}\r\n      pattern={pattern}\r\n      autoComplete={autocomplete}\r\n    />\r\n  );\r\n};\r\nexport default Input;\r\n","type goButtonProps={\r\n  text:string\r\n}\r\n\r\nexport const GoButton = ({ text }: goButtonProps) => {\r\n  return (\r\n    <button\r\n      className=\"rounded-full bg-orange w-14 h-14 font-Roboto text-xl text-white font-medium mt-8 absolute bottom-[-50px] lg:left-[25%] \"\r\n      type=\"submit\"\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n","export const regexEmail = \"[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$\";","import {  FormEvent } from \"react\";\r\nimport Input from \"../../../../components/input/landing/landingInput\";\r\nimport { GoButton } from \"../../../../components/buttons/goButton\";\r\nimport { regexEmail } from \"../../../../features/regex/regex\";\r\n\r\ntype loginProps = {\r\n  fn: (e: FormEvent<HTMLFormElement>) => void;\r\n};\r\n\r\nexport const Login= ({ fn }: loginProps) => {\r\n  return (\r\n    <form\r\n      className=\"flex flex-col w-full justify-center items-center mt-6 min-h-[208px] relative lg:items-start\"\r\n      onSubmit={fn}\r\n    >\r\n      <Input\r\n        title=\"Email\"\r\n        name=\"email\"\r\n        required={true}\r\n        pattern={regexEmail}\r\n        type=\"email\"\r\n      />\r\n      <Input\r\n        title=\"Password\"\r\n        name=\"password\"\r\n        required={true}\r\n        type=\"password\"\r\n        autocomplete=\"on\"\r\n      />\r\n      <GoButton text=\"Go!\" />\r\n    </form>\r\n  );\r\n};\r\n","import { FormEvent } from \"react\";\r\nimport Input from \"../../../../components/input/landing/landingInput\";\r\nimport { GoButton } from \"../../../../components/buttons/goButton\";\r\nimport { regexEmail } from \"../../../../features/regex/regex\";\r\ntype registerProps = {\r\n  fn: (e: FormEvent<HTMLFormElement>) => void;\r\n};\r\n\r\nconst Register = ({ fn }: registerProps) => {\r\n  return (\r\n    <form\r\n      className=\"flex flex-col w-full justify-center items-center mt-6 min-h-[208px] relative lg:items-start\"\r\n      onSubmit={fn}\r\n    >\r\n      <Input title=\"Name\" name=\"userName\" required={true} type=\"text\" />\r\n      <Input\r\n        title=\"Email\"\r\n        name=\"email\"\r\n        required={true}\r\n        type=\"email\"\r\n        pattern={regexEmail}\r\n      />\r\n      <Input\r\n        title=\"Password\"\r\n        name=\"password\"\r\n        required={true}\r\n        type=\"password\"\r\n        autocomplete=\"on\"\r\n      />\r\n      <Input\r\n        title=\"Confirm password\"\r\n        name=\"passwordRepeat\"\r\n        required={true}\r\n        type=\"password\"\r\n        autocomplete=\"on\"\r\n      />\r\n      <GoButton text=\"Go!\" />\r\n    </form>\r\n  );\r\n};\r\nexport default Register;\r\n","import Notiflix from \"notiflix\";\r\nimport { FormEvent, useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { actionLoginUser, actionRegisterUser } from \"../../app/actions\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport { StartPageButton } from \"../../components/buttons/startPageButton\";\r\nimport { Login } from \"./forms/loginForm/login\";\r\nimport Register from \"./forms/registerForm/register\";\r\nimport Loader from \"../../components/loading/loader\";\r\n\r\ntype registerData = {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n};\r\ntype loginData = {\r\n  email: string;\r\n  password: string;\r\n};\r\ntype entryName = \"login\" | \"register\";\r\n\r\ntype entryForm = {\r\n  register: entryName;\r\n  login: entryName;\r\n};\r\n\r\nconst StartPage = () => {\r\n  const landingForms: entryForm = {\r\n    register: \"register\",\r\n    login: \"login\",\r\n  };\r\n\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n  const token = useAppSelector((state) => state.app.userToken);\r\n  const isLoading = useAppSelector((state) => state.app.isLoading);\r\n\r\n  const [activeForm, setActiveForm] = useState(landingForms.register);\r\n  const [isLoginButtonActive, setLoginButtonActive] = useState(false);\r\n  const [isRegisterButtonActive, setRegisterButtonActive] = useState(true);\r\n\r\n  const handleActiveForm = (\r\n    activeBtnFn: React.Dispatch<React.SetStateAction<boolean>>,\r\n    inactiveBtnFn: React.Dispatch<React.SetStateAction<boolean>>,\r\n    activeFormFn: React.Dispatch<React.SetStateAction<\"login\" | \"register\">>,\r\n    form: \"login\"|\"register\",\r\n  ) => {\r\n    activeBtnFn(true);\r\n    inactiveBtnFn(false);\r\n    activeFormFn(form);\r\n  };\r\n  const handleRegister = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    const name = form.userName.value;\r\n    const email = form.email.value;\r\n    const password = form.password.value;\r\n    const passwordRepeat = form.passwordRepeat.value;\r\n    if (password !== passwordRepeat) {\r\n      Notiflix.Notify.failure(\"The passwords are not the same. Try again.\");\r\n    } else {\r\n      const data: registerData = {\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n      };\r\n      dispatch(actionRegisterUser(data));\r\n    }\r\n  };\r\n  const handleLogin = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    const form = e.currentTarget;\r\n    const email = form.email.value;\r\n    const password = form.password.value;\r\n\r\n    const data: loginData = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n    await dispatch(actionLoginUser(data));\r\n    await navigate(\"/\");\r\n  };\r\n  useEffect(() => {\r\n    if (token) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [navigate, token]);\r\n\r\n  return (\r\n    <section className=\"h-screen w-screen flex background justify-center lg:items-center  \">\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"ml-2 mr-2 md:w-1/2 lg:w-2/5 \">\r\n          <h1 className=\" font-bold text-2xl lg:text-3xl text-azure mt-12\">Questify</h1>\r\n          <div className=\"font-Montserrat mt-8\">\r\n            <div className=\"  text-xl text-black text-center font-semibold lg:text-2xl lg:text-start\">\r\n              Questify will turn your life into a thrilling game full of amazing\r\n              quests and exciting challenges.\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center justify-center w-full\"></div>\r\n          <div className=\"flex flex-col w-full justify-center items-center mt-12 lg:items-start\">\r\n            <div className=\" text-lg text-gray text-center font-Montserrat pb-4 lg:text-xl \">\r\n              Choose you want to sign up or log in!\r\n            </div>\r\n            <ul className=\"flex justify-around w-full mt-8 lg:items-start lg:w-1/2\">\r\n              <li>\r\n                  <StartPageButton\r\n                    activeClass={isLoginButtonActive}\r\n                  title=\"Login\"\r\n                  fn={()=>handleActiveForm(\r\n                    setLoginButtonActive,\r\n                    setRegisterButtonActive,\r\n                    setActiveForm,\r\n                    \"login\"\r\n                  )}\r\n                />\r\n              </li>\r\n              <li>\r\n                  <StartPageButton                   \r\n                    activeClass={isRegisterButtonActive}\r\n                  title=\"Register\"\r\n                  fn={()=>handleActiveForm(\r\n                    setRegisterButtonActive,\r\n                    setLoginButtonActive,\r\n                    setActiveForm,\r\n                    \"register\"\r\n                  )}\r\n                />\r\n              </li>\r\n            </ul>\r\n            {activeForm === landingForms.register ? (\r\n              <Register fn={handleRegister} />\r\n            ) : (\r\n              <Login fn={handleLogin} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\nexport default StartPage;\r\n"],"names":["className","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","color","StartPageButton","title","fn","activeClass","onClick","name","required","type","pattern","autocomplete","placeholder","autoComplete","GoButton","text","regexEmail","Login","onSubmit","landingForms","dispatch","useAppDispatch","navigate","useNavigate","token","useAppSelector","state","app","userToken","isLoading","useState","activeForm","setActiveForm","isLoginButtonActive","setLoginButtonActive","isRegisterButtonActive","setRegisterButtonActive","handleActiveForm","activeBtnFn","inactiveBtnFn","activeFormFn","form","handleRegister","e","preventDefault","currentTarget","userName","value","email","password","passwordRepeat","Notiflix","data","actionRegisterUser","handleLogin","actionLoginUser","useEffect"],"sourceRoot":""}