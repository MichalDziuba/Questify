{"version":3,"file":"static/js/629.8965cca7.chunk.js","mappings":"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","sources":["components/loading/loader.tsx","components/buttons/addButton.tsx","components/header/header.tsx","components/emptystate/emptyState.tsx","components/callendar/callendar.tsx","features/date/date.ts","components/questform/deleteModal.tsx","components/questform/questDifficult.tsx","components/questform/questCategory.tsx","components/buttons/challenge-questButton.tsx","components/questform/questTitle.tsx","components/questform/questDotLevel.tsx","components/questform/separatorLine.tsx","components/buttons/cancelButton.tsx","components/buttons/deleteButton.tsx","components/buttons/start-saveButton.tsx","components/questform/questForm.tsx","components/quest/questLevel.tsx","components/quest/questCategory.tsx","features/text/firstLetterUppercase.ts","components/quest/questTitle.tsx","components/quest/questDate.tsx","components/buttons/doneButton.tsx","components/quest/quest.tsx","components/questdone/questDoneTitle.tsx","components/questdone/questDone.tsx","components/questlist/questList.tsx","pages/main/main.tsx"],"sourcesContent":["import {  Puff } from \"react-loader-spinner\";\r\nimport { FC } from \"react\";\r\n\r\nconst Loading:FC = () => {\r\n    return (\r\n      <div className=\"w-screen h-screen flex items-center justify-center bg-black opacity-80\">\r\n        <Puff\r\n          visible={true}\r\n          height=\"180\"\r\n          width=\"1000\"\r\n          ariaLabel=\"dna-loading\"\r\n          wrapperStyle={{}}\r\n          wrapperClass=\"dna-wrapper\"\r\n          color=\"#00D7FF\"\r\n        />\r\n      </div>\r\n    );\r\n}\r\nexport default Loading;","import { FC } from \"react\";\r\ntype props = {\r\n    text: string,\r\n    fn: () => void;\r\n}\r\n\r\n export const AddButton: FC<props> = ({text,fn}) => {\r\n    return (\r\n      <button\r\n        className=\"w-12 h-12 rounded-full bg-orange text-3xl text-white fixed bottom-8 right-8 transition duration-150 ease-in-out\"\r\n        onClick={fn}\r\n        data-bs-toggle=\"tooltip\"\r\n        data-bs-placement=\"top\"\r\n        title=\"Add a new quest\"\r\n      >\r\n        {text}\r\n      </button>\r\n    );\r\n}\r\n","import { RiLogoutCircleRLine } from \"react-icons/ri\";\r\nimport Notiflix from \"notiflix\";\r\nimport { actionLogoutUser } from \"../../app/actions\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\n\r\nexport const Header = () => {\r\n  const userName = useAppSelector((state) => state.app.userName) || \"\";\r\n  const token = useAppSelector((state) => state.app.userToken);\r\n  const userFirstChar = userName.charAt(0);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleLogout = async () => {\r\n    await dispatch(actionLogoutUser(token));\r\n    localStorage.clear();\r\n    Notiflix.Notify.info(\"Logout successful! See you soon!\");\r\n  };\r\n\r\n  return (\r\n    <nav className=\"h-16 bg-navyblue w-screen flex items-center justify-center  \">\r\n      <div className=\"flex justify-between items-center w-[93%]\">\r\n        <h2 className=\" text-azure text-xl\">Questify</h2>\r\n\r\n        <div className=\"flex\">\r\n          <div className=\"flex items-center justify-center\">\r\n            <span className=\"rounded-full bg-navy w-8 h-8 text-white text-lg font-medium flex justify-center items-center\">\r\n              {userFirstChar}\r\n            </span>\r\n            <p className=\"hidden md:block ml-2 text-gray text-lg font-light font-Montserrat\">{userName} Quest Log</p>\r\n          </div>\r\n\r\n          <button className=\"md:hidden\">\r\n            <RiLogoutCircleRLine\r\n              className=\"fill-navy w-8 h-8 ml-2\"\r\n              onClick={handleLogout}\r\n            />\r\n          </button>\r\n        </div>\r\n        <button className=\"hidden md:block\">\r\n          <RiLogoutCircleRLine\r\n            className=\"fill-navy w-8 h-8 ml-2\"\r\n            onClick={handleLogout}\r\n          />\r\n        </button>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import { FC } from 'react'\r\nimport image from '../../images/empty.png'\r\nconst EmptyState:FC = () => {\r\n    return (\r\n        <div className='flex flex-col justify-center items-center mt-8  '>\r\n            <img src={image} alt='empty state' className='w-[290px] h-[320px] rounded-2xl'></img>\r\n        <p className='font-Montserrat text-xl font-medium mt-10 text-center'>\"Hmmm... that orange button must be important...\"</p>\r\n      </div>\r\n    );\r\n}\r\nexport default EmptyState","import React, { FC } from \"react\";\r\nimport { Dayjs } from \"dayjs\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\ntype props = {\r\n  dateValue: Dayjs | null;\r\n  setDateValue: React.Dispatch<React.SetStateAction<Dayjs | null>>;\r\n  isQuestChallenge: boolean;\r\n};\r\n\r\nconst Calendar: FC<props> = ({\r\n  dateValue,\r\n  setDateValue,\r\n  isQuestChallenge,\r\n}: props) => {\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n      <DatePicker\r\n        label=\"Select a date\"\r\n        value={dateValue}\r\n        inputFormat=\"DD/MM/YYYY\"\r\n        onChange={(newValue) => {\r\n          setDateValue(newValue);\r\n        }}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            sx={\r\n              isQuestChallenge\r\n                ? {\r\n                    \"& .MuiOutlinedInput-root\": {\r\n                      \"& fieldset\": {\r\n                        borderColor: \"white\",\r\n                      },\r\n                      \"&:hover fieldset\": {\r\n                        borderColor: \"white\",\r\n                      },\r\n                      \"&.Mui-focused fieldset\": {\r\n                        borderColor: \"white\",\r\n                      },\r\n                      color: \"white\",\r\n                    },\r\n                    svg: {\r\n                      color: \"white\",\r\n                    },\r\n                  }\r\n                : {\r\n                    \"& .MuiOutlinedInput-root\": {\r\n                      \"& fieldset\": {\r\n                        borderColor: \"black\",\r\n                      },\r\n                      \"&:hover fieldset\": {\r\n                        borderColor: \"black\",\r\n                      },\r\n                      \"&.Mui-focused fieldset\": {\r\n                        borderColor: \"black\",\r\n                      },\r\n                      color: \"black\",\r\n                    },\r\n                  }\r\n            }\r\n            InputLabelProps={{\r\n              style: {\r\n                color: isQuestChallenge ? \"white\" : \"black\",\r\n              },\r\n            }}\r\n            {...params}\r\n          />\r\n        )}\r\n      />\r\n    </LocalizationProvider>\r\n  );\r\n};\r\nexport default Calendar;\r\n","import dayjs from \"dayjs\";\r\n\r\nconst date = dayjs();\r\n export const formatDate = (date: string) => {\r\n   const [day, month, year] = date.split(\"/\");\r\n   return `${year}-${month}-${day}`;\r\n};\r\nexport  const parseDate = (date: string) => {\r\n  const [day, month, year] = date.split(\"/\").map(Number);\r\n  return new Date(year, month - 1, day);\r\n};\r\n\r\nexport const today = date.format(\"DD/MM/YYYY\");\r\nexport const tomorrow = date.add(1, \"day\").format(\"DD/MM/YYYY\");\r\nexport const parsedToday = parseDate(today);\r\nexport const parsedTomorrow=parseDate(tomorrow)","import { Backdrop } from \"@mui/material\";\r\n\r\ntype props = {\r\n  modalDeleteOpen: boolean;\r\n  isQuestChallenge: boolean;\r\n  handleDelete: () => void;\r\n  setModalOpen: (open: boolean) => void;\r\n};\r\n\r\nexport const DeleteModal = ({\r\n  modalDeleteOpen,\r\n  isQuestChallenge,\r\n  handleDelete,\r\n  setModalOpen,\r\n}: props) => {\r\n  return (\r\n    <Backdrop\r\n      sx={{\r\n        color: \"#ffff\",\r\n        justifyItems: \"center\",\r\n        alignItems: \"center\",\r\n        opacity: \"1\",\r\n        zIndex: (theme) => theme.zIndex.drawer + 1,\r\n      }}\r\n      open={modalDeleteOpen}\r\n      className=\"open:animate-fade-in\"\r\n    >\r\n      <div className=\" flex flex-col w-64 h-36 items-center justify-evenly border-solid border-2 bg-navyblue rounded duration-500 ease-in-out \">\r\n        <h2 className=\"text-center text-lg\">{`Do you want to delete this ${\r\n          isQuestChallenge ? \"challenge\" : \"quest\"\r\n        }?`}</h2>\r\n        <ul className=\"flex justify-around w-9/12 text-lg\">\r\n          <li>\r\n            <button\r\n              className=\"w-12 h-8 border-2 border-solid bg-green-500 text-center\"\r\n              onClick={handleDelete}\r\n            >\r\n              Yes\r\n            </button>\r\n          </li>\r\n          <li>\r\n            <button\r\n              className=\"w-12 h-8 border-2 border-solid bg-red-500\"\r\n              onClick={() => setModalOpen(false)}\r\n            >\r\n              No\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </Backdrop>\r\n  );\r\n};","type props = {\r\n    handleChangeLevel:(e:React.ChangeEvent<HTMLSelectElement|HTMLInputElement>)=>void;\r\n    questLevel:string;\r\n    isQuestChallenge:boolean;\r\n}\r\n\r\n\r\nexport const QuestDifficult = ({handleChangeLevel,questLevel,isQuestChallenge}:props) => {\r\n\r\n    return (\r\n      <select\r\n        id=\"difficult\"\r\n        name=\"difficult\"\r\n        onChange={handleChangeLevel}\r\n        defaultValue={questLevel}\r\n        className={\r\n          isQuestChallenge ? \"bg-deepblue text-white\" : \"bg-white text-black\"\r\n        }\r\n      >\r\n        <option value=\"easy\"> Easy</option>\r\n        <option value=\"normal\"> Normal</option>\r\n        <option value=\"hard\">Hard</option>\r\n      </select>\r\n    );\r\n}","type props = {\r\n  handleChangeCategories: (\r\n    e: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>\r\n    ) => void;\r\n    questCategory: string;\r\n};\r\n\r\n\r\nexport const QuestCategory = ({questCategory,handleChangeCategories}:props) => {\r\n    return (\r\n      <select\r\n        name=\"categories\"\r\n        onChange={handleChangeCategories}\r\n        className=\"bg-[#B9C3C8] p-1 rounded-r-xl\"\r\n        defaultValue={questCategory}\r\n      >\r\n        <option value=\"stuff\">STUFF</option>\r\n        <option value=\"family\">FAMILY</option>\r\n        <option value=\"health\">HEALTH</option>\r\n        <option value=\"learning\">LEARNING</option>\r\n        <option value=\"leisure\">LEISURE</option>\r\n        <option value=\"work\">WORK</option>\r\n      </select>\r\n    );\r\n}","import { AiFillStar, AiTwotoneTrophy } from \"react-icons/ai\";\r\n\r\ntype props = {\r\n  isQuestChallenge: boolean;\r\n  handleChallenge: (e: React.SyntheticEvent) => void;\r\n};\r\n\r\nexport const ChallengeQuestButton = ({isQuestChallenge,handleChallenge}:props) => {\r\n    return (\r\n      <button onClick={handleChallenge}>\r\n        {isQuestChallenge ? (\r\n          <AiFillStar\r\n            className=\"fill-azure w-5 h-5\"\r\n            data-bs-toggle=\"tooltip\"\r\n            data-bs-placement=\"right\"\r\n            title=\"Back to normal quest!\"\r\n          />\r\n        ) : (\r\n          <AiTwotoneTrophy\r\n            className=\"fill-azure w-5 h-5\"\r\n            data-bs-toggle=\"tooltip\"\r\n            data-bs-placement=\"right\"\r\n            title=\"Make your quest a challenge!\"\r\n          />\r\n        )}\r\n      </button>\r\n    );\r\n}","type props = {\r\n    questTitle: string;\r\n    isQuestChallenge: boolean;\r\n}\r\n\r\n\r\nexport const QuestTitleInput = ({ questTitle, isQuestChallenge }:props) => {\r\n  return (\r\n    <input\r\n      name=\"title\"\r\n      defaultValue={questTitle}\r\n      maxLength={30}\r\n      required\r\n      placeholder={\r\n        isQuestChallenge ? \"Create a challange!\" : \"Create a new quest\"\r\n      }\r\n      className={`border-b-2 border-azure text-azure placeholder:text-gray placeholder:text-center placeholder:text-base outline-0 text-lg w-10/12 ${\r\n        isQuestChallenge ? \"bg-deepblue\" : \"bg-white\"\r\n      }`}\r\n    />\r\n  );\r\n};","import { GoPrimitiveDot } from \"react-icons/go\";\r\n\r\ntype props = {\r\n    dotColor:string\r\n}\r\n\r\nexport const DotLevel = ({dotColor}:props) => {\r\n    return (\r\n      <span>\r\n        <GoPrimitiveDot fill={dotColor} className=\"w-5 h-5\" id=\"dot_color\" />\r\n      </span>\r\n    );\r\n}","export const SeparatorLine = () => {\r\n    return <span className=\"text-gray text-lg\">|</span>\r\n}","type props = {\r\n    closeModalFn:()=>void\r\n}\r\nexport const ButtonCancel = ({closeModalFn}:props) => {\r\n    return (\r\n      <button\r\n        className=\" text-red-600 transition duration-50 ease-in-out\"\r\n        data-bs-toggle=\"tooltip\"\r\n        data-bs-placement=\"right\"\r\n        title=\"Cancel\"\r\n        type=\"button\"\r\n        onClick={closeModalFn}\r\n      >\r\n        X\r\n      </button>\r\n    );\r\n}","import { AiOutlineDelete } from \"react-icons/ai\";\r\ntype props = {\r\n  isQuestChallenge: boolean;\r\n  setModalOpen: (value: React.SetStateAction<boolean>) => void;\r\n};\r\nexport const ButtonDelete = ({ isQuestChallenge, setModalOpen }: props) => {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => setModalOpen(true)}\r\n      className=\"  transition\r\n    duration-50\r\n    ease-in-out\"\r\n      data-bs-toggle=\"tooltip\"\r\n      data-bs-placement=\"right\"\r\n      title={`Delete ${isQuestChallenge ? \"challenge\" : \"quest\"}!`}\r\n    >\r\n      <AiOutlineDelete\r\n        className={`w-5 h-5 ${isQuestChallenge ? \"text-white\" : \"text-black\"}`}\r\n      />\r\n    </button>\r\n  );\r\n};\r\n","import { FiSave } from \"react-icons/fi\";\r\ntype props = {\r\n  isQuestNew: boolean;\r\n  isQuestChallenge: boolean;\r\n}\r\nexport const ButtonStartSave = ({isQuestNew,isQuestChallenge}:props) => {\r\n    \r\n    return (\r\n      <button className=\"text-azure\" type=\"submit\">\r\n        {isQuestNew ? (\r\n          <p\r\n            className=\" duration-50 ease-in-out\"\r\n            data-bs-toggle=\"tooltip\"\r\n            data-bs-placement=\"right\"\r\n            title=\"Start the new quest!\"\r\n          >\r\n            START\r\n          </p>\r\n        ) : (\r\n          <FiSave\r\n            className={` w-5 h-5 duration-50 ease-in-out ${\r\n              isQuestChallenge ? \"text-white\" : \"text-black\"\r\n            }`}\r\n            data-bs-toggle=\"tooltip\"\r\n            data-bs-placement=\"right\"\r\n            title=\"Save\"\r\n          />\r\n        )}\r\n      </button>\r\n    );\r\n}","import dayjs, { Dayjs } from \"dayjs\";\r\nimport React, { FC, useState } from \"react\";\r\nimport Calendar from \"../callendar/callendar\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport {\r\n  actionAddQuest,\r\n  actionDeleteQuest,\r\n  actionEditQuest,\r\n} from \"../../app/actions\";\r\nimport { formatDate } from \"../../features/date/date\";\r\nimport { DeleteModal } from \"./deleteModal\";\r\nimport { QuestDifficult } from \"./questDifficult\";\r\nimport { QuestCategory } from \"./questCategory\";\r\nimport { ChallengeQuestButton } from \"../buttons/challenge-questButton\";\r\nimport { QuestTitleInput } from \"./questTitle\";\r\nimport { DotLevel } from './questDotLevel';\r\n\r\nimport { SeparatorLine } from \"./separatorLine\";\r\nimport { ButtonCancel } from \"../buttons/cancelButton\";\r\nimport { ButtonDelete } from \"../buttons/deleteButton\";\r\nimport { ButtonDone } from '../buttons/doneButton'\r\nimport { ButtonStartSave } from \"../buttons/start-saveButton\";\r\n\r\nexport type editQuestPayload = {\r\n  id: string;\r\n  owner: string;\r\n  data: formData;\r\n};\r\n\r\nexport type formData = {\r\n  title: string;\r\n  date: string;\r\n  isChallenge: boolean;\r\n  level: string;\r\n  category: string;\r\n  isDone: boolean;\r\n};\r\n\r\ntype QuestFormProps = {\r\n  closeModalFn: () => void;\r\n  questLevel: string;\r\n  questCategory: string;\r\n  questTitle: string;\r\n  questDate: string;\r\n  isQuestNew: boolean;\r\n  isChallenge: boolean;\r\n  id: string;\r\n  isDone: boolean;\r\n};\r\nexport type deleteQuestData = {\r\n  owner: string;\r\n  id: string;\r\n};\r\nconst QuestForm: FC<QuestFormProps> = ({\r\n  closeModalFn,\r\n  questCategory,\r\n  questLevel,\r\n  questTitle,\r\n  isQuestNew,\r\n  questDate = \"\",\r\n  isChallenge,\r\n  id,\r\n  isDone,\r\n}) => {\r\n  const getDotColor = (level: string) => {\r\n    switch (level) {\r\n      case \"easy\":\r\n        return \"green\";\r\n      case \"normal\":\r\n        return \"#00D7FF\";\r\n\r\n      case \"hard\":\r\n        return \"red\";\r\n      default:\r\n        return \"green\";\r\n    }\r\n  };\r\n  const dispatch = useAppDispatch();\r\n  const date = isQuestNew ? dayjs(new Date()) : dayjs(formatDate(questDate));\r\n  const [dateCalendar, setDateCalendar] = useState<Dayjs | null>(dayjs(date));\r\n  const [dotColor, setDotColor] = useState(getDotColor(questLevel));\r\n  const userEmail = useAppSelector((state) => state.app.userEmail);\r\n  const [isQuestChallenge, setQuestChallenge] = useState(isChallenge);\r\n  const [modalDeleteOpen, setModalOpen] = useState(false);\r\n\r\n  const handleChallenge = (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    setQuestChallenge(!isQuestChallenge);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const form = e.target as HTMLFormElement;\r\n    const target = e.target as typeof e.target & {\r\n      title: { value: string };\r\n      difficult: { value: string };\r\n      categories: { value: string };\r\n    };\r\n    const dataQuest: formData = {\r\n      title: target.title.value,\r\n      level: target.difficult.value,\r\n      category: target.categories.value,\r\n      date: `${dateCalendar?.format(\"DD/MM/YYYY\")}`,\r\n      isChallenge: isQuestChallenge,\r\n      isDone: isDone,\r\n    };\r\n    await dispatch(actionAddQuest(dataQuest));\r\n    form.reset();\r\n    closeModalFn();\r\n  };\r\n  const handleEdit = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const target = e.target as typeof e.target & {\r\n      title: { value: string };\r\n      difficult: { value: string };\r\n      categories: { value: string };\r\n    };\r\n    const data: formData = {\r\n      title: target.title.value,\r\n      level: target.difficult.value,\r\n      category: target.categories.value,\r\n      date: `${dateCalendar?.format(\"DD/MM/YYYY\")}`,\r\n      isChallenge: isQuestChallenge,\r\n      isDone: isDone,\r\n    };\r\n    const dataPayload: editQuestPayload = {\r\n      owner: userEmail,\r\n      id: id,\r\n      data,\r\n    };\r\n    dispatch(actionEditQuest(dataPayload));\r\n    closeModalFn();\r\n  };\r\n  const handleDelete: () => void = () => {\r\n    const payloadData: deleteQuestData = {\r\n      owner: userEmail,\r\n      id: id,\r\n    };\r\n    dispatch(actionDeleteQuest(payloadData));\r\n    setModalOpen(false);\r\n  };\r\n  const handleChangeLevel = (\r\n    e: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>\r\n  ): void => {\r\n    const option = e.currentTarget.value;\r\n    setDotColor(getDotColor(option));\r\n  };\r\n  const handleChangeCategories = (\r\n    e: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>\r\n  ): void => {\r\n    const selectForm = e.currentTarget;\r\n    const selectedOption = selectForm.value;\r\n    if (selectedOption === \"stuff\") {\r\n      selectForm.style.background = \"#B9C3C8\";\r\n    }\r\n    if (selectedOption === \"family\") {\r\n      selectForm.style.background = \"#FFE6D3\";\r\n    }\r\n    if (selectedOption === \"health\") {\r\n      selectForm.style.background = \"#CDF7FF\";\r\n    }\r\n    if (selectedOption === \"learning\") {\r\n      selectForm.style.background = \"#FFF6C0\";\r\n    }\r\n    if (selectedOption === \"leisure\") {\r\n      selectForm.style.background = \"#F8D2FF\";\r\n    }\r\n    if (selectedOption === \"work\") {\r\n      selectForm.style.background = \"#D3F6CE\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`w-72 h-72 rounded-2xl  flex flex-col justify-around items-center font-Montserrat relative  text-black ${\r\n        isQuestChallenge ? \"bg-deepblue \" : \"bg-white \"\r\n      }`}\r\n    >\r\n      <form\r\n        id=\"questForm\"\r\n        className=\"w-full h-[80%] flex flex-col-reverse items-center justify-between\"\r\n        onSubmit={isQuestNew ? handleSubmit : handleEdit}\r\n      >\r\n        <div className=\"flex justify-between w-full flex-row mb-4\">\r\n          <QuestCategory\r\n            handleChangeCategories={handleChangeCategories}\r\n            questCategory={questCategory}\r\n          />\r\n\r\n          <div className=\"flex w-4/12 justify-between font-medium mr-3\">\r\n            {!isQuestNew && (\r\n              <>\r\n              \r\n                <ButtonCancel closeModalFn={closeModalFn} />\r\n                <SeparatorLine />\r\n              </>\r\n            )}\r\n            <ButtonDelete\r\n              isQuestChallenge={isQuestChallenge}\r\n              setModalOpen={setModalOpen}\r\n            />\r\n            <SeparatorLine />\r\n            <ButtonStartSave\r\n              isQuestNew={isQuestNew}\r\n              isQuestChallenge={isQuestChallenge} \r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <Calendar\r\n          dateValue={dateCalendar}\r\n          setDateValue={setDateCalendar}\r\n          isQuestChallenge={isQuestChallenge}\r\n        />\r\n        <QuestTitleInput\r\n          isQuestChallenge={isQuestChallenge}\r\n          questTitle={questTitle}\r\n        />\r\n\r\n        <div className=\"flex w-full\">\r\n          <div className=\"flex w-full justify-around\">\r\n            <div className=\"flex w-9/12\">\r\n              <DotLevel dotColor={dotColor} />\r\n              <QuestDifficult\r\n                handleChangeLevel={handleChangeLevel}\r\n                isQuestChallenge={isQuestChallenge}\r\n                questLevel={questLevel}\r\n              />\r\n            </div>\r\n\r\n            <ChallengeQuestButton\r\n              handleChallenge={handleChallenge}\r\n              isQuestChallenge={isQuestChallenge}\r\n            />\r\n          </div>\r\n        </div>\r\n        {modalDeleteOpen && (\r\n          <DeleteModal\r\n            modalDeleteOpen={modalDeleteOpen}\r\n            isQuestChallenge={isQuestChallenge}\r\n            handleDelete={handleDelete}\r\n            setModalOpen={setModalOpen}\r\n          />\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default QuestForm;\r\n","import { GoPrimitiveDot } from \"react-icons/go\"\r\n\r\n\r\n\r\ntype Props = {\r\n  level: string;\r\n \r\n};\r\n\r\nexport const QuestLevel = ({ level }: Props) => {\r\n  let dotClass;\r\n  switch (level) {\r\n    case \"easy\":\r\n      dotClass = \"fill-green-500\";\r\n      break;\r\n    case \"normal\":\r\n      dotClass = \"fill-[#00D7FF]\";\r\n      break;\r\n    case \"hard\":\r\n      dotClass = \"fill-red-500\";\r\n      break;\r\n  }\r\n\r\n  return level ? (\r\n    <div className=\"flex font-medium text-gray\">\r\n      <GoPrimitiveDot size={20} className={dotClass} />\r\n      {level.charAt(0).toUpperCase() + level.slice(1)}\r\n    </div>\r\n  ) : null;\r\n};","type Props = {\r\n    category:string\r\n}\r\n\r\n\r\nexport const QuestCategory = ({ category }: Props) => {\r\n    let backgroundStyle;\r\n       if (category === \"stuff\") {\r\n         backgroundStyle = \"bg-[#B9C3C8]\";\r\n       }\r\n       if (category === \"family\") {\r\n         backgroundStyle = \"bg-[#FFE6D3]\";\r\n       }\r\n       if (category === \"health\") {\r\n         backgroundStyle = \"bg-[#CDF7FF]\";\r\n       }\r\n       if (category === \"learning\") {\r\n        backgroundStyle = \"bg-[#FFF6C0]\";\r\n       }\r\n       if (category === \"leisure\") {\r\n         backgroundStyle = \"bg-[#F8D2FF]\";\r\n       }\r\n       if (category === \"work\") {\r\n         backgroundStyle = \"bg-[#D3F6CE]\"\r\n       }\r\n\r\n\r\n    return (\r\n        <div className={`${backgroundStyle} w-32 rounded-r-xl flex items-center h-7 justify-center`}>\r\n            <p className=\"text-lg font-Montserrat md:text-base\">\r\n              {category.toUpperCase()}  \r\n            </p>\r\n\r\n        </div>\r\n    )\r\n}","export const firstLetterUppercase = (text: string) => {\r\n  return text.charAt(0).toUpperCase() + text.slice(1);\r\n};\r\n","import { firstLetterUppercase } from \"../../features/text/firstLetterUppercase\"\r\n\r\ntype props = {\r\n    text: string;\r\n    isChallenge: boolean;\r\n}\r\nexport const QuestTitle = ({ text,isChallenge }: props) => {\r\n    return (\r\n      <p\r\n        className={`text-xl text-center break-all w-titleMobile md:w-titleDefault md:text-lg ${\r\n          isChallenge ? \"text-white\" : \"text-black\"\r\n        }`}\r\n      >\r\n        {firstLetterUppercase(text)}\r\n      </p>\r\n    );\r\n}","import { parseDate, parsedToday, parsedTomorrow } from \"../../features/date/date\";\r\nimport { MdOutlineLocalFireDepartment } from \"react-icons/md\";\r\nimport { AiOutlineFieldTime } from 'react-icons/ai';\r\nimport { GiSnail } from \"react-icons/gi\";\r\nimport { FaRegSadTear } from \"react-icons/fa\";\r\ntype props = {\r\n  date: string;\r\n};\r\nexport const QuestDate = ({ date }: props) => {\r\n  let text;\r\n  let icon;\r\n  const parsedDate = parseDate(date)\r\n  \r\n  if (parsedDate.getTime() === parsedToday.getTime()) {\r\n    icon = (\r\n      <MdOutlineLocalFireDepartment fill=\"#FF851C\" size={20} className=\"ml-1\" />\r\n    );\r\n    text = \"Today\";\r\n  }\r\n    if (parsedDate.getTime() === parsedTomorrow.getTime()) {\r\n\r\n      icon = <AiOutlineFieldTime fill=\"#FF851C\" size={20} className=\"ml-1\" />;\r\n      text=\"Tomorrow\"\r\n  } \r\n  if (parsedDate.getTime() > parsedTomorrow.getTime()) {\r\n\r\n    icon = <GiSnail fill=\"#FF851C\" size={20} className=\"ml-1\" />;\r\n    text=date\r\n  }\r\n  if (parsedDate.getTime() < parsedToday.getTime()) {\r\n\r\n    icon = <FaRegSadTear fill=\"#FF851C\" size={20} className=\"ml-1\" />;\r\n    text=date\r\n  }\r\n  return <div className=\"text-base text-gray\"> <p className=\"flex items-center justify-center\">\r\n    {text} {icon}</p></div>;\r\n};\r\n","import { MdDone } from \"react-icons/md\";\r\n\r\ntype props = {\r\n  openModalComplete: () => void;\r\n};\r\nexport const ButtonDone = ({ openModalComplete }: props) => {\r\n  return (\r\n    <button\r\n      className=\"mr-2 w-8 h-8 box-content border-solid border-2 border-azure  rounded-full hover:scale-110 \"\r\n      onClick={openModalComplete}\r\n    >\r\n      <MdDone className=\"w-8 h-8 text-azure hover:scale-125\" />\r\n    </button>\r\n  );\r\n};\r\n","import { FC, useState } from \"react\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport QuestForm, { editQuestPayload } from \"../questform/questForm\";\r\nimport { VscEdit } from \"react-icons/vsc\";\r\nimport { QuestLevel } from \"./questLevel\";\r\nimport { QuestCategory } from \"./questCategory\";\r\nimport { QuestTitle } from \"./questTitle\";\r\nimport { QuestDate } from \"./questDate\";\r\nimport { ButtonDone } from \"../buttons/doneButton\";\r\nimport { actionEditQuest } from \"../../app/actions\";\r\nimport { formData } from \"../questform/questForm\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport { height } from \"@mui/system\";\r\nexport type questType = {\r\n  _id: string;\r\n  title: string;\r\n  category: string;\r\n  level: string;\r\n  date: string;\r\n  isChallenge: boolean;\r\n  isDone: boolean;\r\n};\r\n\r\nconst Quest: FC<questType> = ({\r\n  level,\r\n  title,\r\n  date,\r\n  category,\r\n  _id,\r\n  isChallenge,\r\n  isDone,\r\n}: questType) => {\r\n  const [openModalEdit, setOpenModalEdit] = useState(false);\r\n  const [openModalComplete,setOpenModalComplete]=useState(false)\r\n  const handleClose = () => {\r\n    setOpenModalEdit(false);\r\n  };\r\n  const userEmail = useAppSelector(state => state.app.userEmail);\r\n  const dispatch=useAppDispatch()\r\n  const handleEdit: () => void =  () => {\r\n    setOpenModalEdit(!openModalEdit);\r\n  };\r\n  const handleOpenModalComplete: ()=>void = () => {\r\n    setOpenModalComplete(true)\r\n  }\r\n  const completeQuest = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const data: formData = {\r\n      title: title,\r\n      level: level,\r\n      category: category,\r\n      date: date,\r\n      isChallenge: isChallenge,\r\n      isDone: true,\r\n    };\r\n    const dataPayload: editQuestPayload = {\r\n      owner: userEmail,\r\n      id: _id,\r\n      data,\r\n    };\r\n    dispatch(actionEditQuest(dataPayload));\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <div\r\n        className={` shadow-[3px_4px_4px_4px_rgba(21,57,90,0.03),-3px_-4px_4px_0px_rgba(21,57,90,0.03)] w-questMobile h-questMobile flex flex-col justify-around rounded-2xl font-Montserrat md:w-questDefault  md:h-questDefault ${\r\n          isChallenge ? \"bg-deepblue \" : \"bg-white \"\r\n        }`}\r\n        id={_id}\r\n      >\r\n        <div className=\"max-w-sm  flex flex-row justify-between mr-2 ml-2 \">\r\n          <QuestLevel level={level} />\r\n\r\n          <button>\r\n            <VscEdit\r\n              className=\"fill-azure w-5 h-5 transition duration-50 ease-in-out\"\r\n              data-bs-toggle=\"tooltip\"\r\n              data-bs-placement=\"right\"\r\n              title={`Edit ${isChallenge ? \"challenge\" : \"quest\"}!`}\r\n              onClick={handleEdit}\r\n            />\r\n          </button>\r\n        </div>\r\n        <div className=\"flex flex-col items-center \">\r\n          <QuestTitle text={title} isChallenge={isChallenge} />\r\n          <QuestDate date={date} />\r\n        </div>\r\n        <div className=\"flex justify-between\">\r\n          <QuestCategory category={category} />\r\n          <ButtonDone openModalComplete={handleOpenModalComplete} />\r\n        </div>\r\n      </div>\r\n      {openModalEdit && (\r\n        <Backdrop\r\n          sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n          open={openModalEdit}\r\n          className=\"w-screen h-screen\"\r\n        >\r\n          <QuestForm\r\n            closeModalFn={handleClose}\r\n            questCategory={category}\r\n            questLevel={level}\r\n            questTitle={title}\r\n            isQuestNew={false}\r\n            questDate={date}\r\n            isChallenge={isChallenge}\r\n            id={_id}\r\n            isDone={isDone}\r\n          />\r\n        </Backdrop>\r\n      )}\r\n      {openModalComplete && (\r\n        <Backdrop\r\n          sx={{\r\n            color: \"#fffff\",\r\n            position: \"absolute\",\r\n            top: \"0\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: (theme) => theme.zIndex.drawer + 1,\r\n          }}\r\n          open={openModalComplete}\r\n          className=\"rounded-2xl\"\r\n        >\r\n          <div className=\"flex flex-col justify-around items-center w-11/12 h-4/5 text-azure\">\r\n            <p className=\"text-center text-lg\">\r\n              Do you want to set this {isChallenge ? \"challange\" : \"quest\"} as\r\n              completed?\r\n            </p>\r\n            <div className=\"flex justify-around items-center w-full text-lg\">\r\n              <button\r\n                className=\"text-white p-1 border-solid border-green-500 w-fit h-fit\"\r\n                onClick={completeQuest}\r\n              >\r\n                Yes\r\n              </button>\r\n              <button\r\n                className=\"text-white p-1 border-solid border-red-600 w-fit h-fit\"\r\n                onClick={() => setOpenModalComplete(false)}\r\n              >\r\n                No\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Backdrop>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Quest;\r\n","import { firstLetterUppercase } from \"../../features/text/firstLetterUppercase\";\r\ntype props = {\r\n    text:string\r\n}\r\nexport const QuestDoneTitle = ({ text }: props) => {\r\n    const truncatedText =\r\n      text.length > 20 ? `${text.substring(0, 17)}...` : text;\r\n  \r\n  return (\r\n    <p\r\n      className='break-all text-azure underline'\r\n    >\r\n      {firstLetterUppercase(truncatedText)}\r\n    </p>\r\n  );\r\n};\r\n","import awardImage from \"../../images/award.png\";\r\nimport { BsArrowRight } from \"react-icons/bs\";\r\nimport { actionDeleteQuest, actionEditQuest } from \"../../app/actions\";\r\nimport { deleteQuestData, editQuestPayload, formData } from \"../questform/questForm\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport { QuestDoneTitle } from \"./questDoneTitle\";\r\nimport {RiArrowGoBackLine} from 'react-icons/ri'\r\nimport { SeparatorLine } from \"../questform/separatorLine\";\r\ntype props = {\r\n  _id: string;\r\n  title: string;\r\n  category: string;\r\n  date: string\r\n  isChallenge: boolean;\r\n  level: string;              \r\n  isDone: boolean;\r\n};\r\nexport const QuestDone = ({ _id, title,category,date,isChallenge,level,isDone }: props) => {\r\n  const userEmail = useAppSelector((state) => state.app.userEmail);\r\n  const dispatch = useAppDispatch();\r\n  const deleteQuest = () => {\r\n    const payloadData: deleteQuestData = {\r\n      owner: userEmail,\r\n      id: _id,\r\n    };\r\n    dispatch(actionDeleteQuest(payloadData));\r\n  };\r\n  const restoreQuest = () => {\r\n    const data: formData = {\r\n      title: title,\r\n      level: level,\r\n      category: category,\r\n      date: date,\r\n      isChallenge: isChallenge,\r\n      isDone: false,\r\n    };\r\n    const dataPayload: editQuestPayload = {\r\n      owner: userEmail,\r\n      id: _id,\r\n      data,\r\n    };\r\n    dispatch(actionEditQuest(dataPayload));\r\n  }\r\n  return (\r\n    <div className=\"shadow-[3px_4px_4px_4px_rgba(21,57,90,0.03),-3px_-4px_4px_0px_rgba(21,57,90,0.03)] w-questMobile h-questMobile md:h-questDefault md:w-questDefault flex flex-col items-center justify-around rounded-2xl font-Montserrat bg-white\">\r\n      <div className=\"flex flex-col w-11/12 justify-center items-center cursor-default\">\r\n        <QuestDoneTitle text={title} />\r\n      </div>\r\n      <img\r\n        src={awardImage}\r\n        alt=\"quest done\"\r\n        className=\"w-32 h-28 md:w-28 md:h-24\"\r\n      ></img>\r\n      <div className=\"flex items-center justify-around w-9/12 md:w-11/12 text-base\">\r\n        <button className=\"flex text-center text-gray hover:text-azure \" onClick={restoreQuest}>\r\n          <RiArrowGoBackLine className=\"fill-azure w-5 h-5 mr-2\" />\r\n          Restore\r\n        </button>\r\n        <SeparatorLine />\r\n        <button\r\n          className=\"text-gray flex text-center items-center hover:text-azure\"\r\n          onClick={deleteQuest}\r\n        >\r\n          Delete <BsArrowRight className=\"fill-azure w-5 h-5 ml-2\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport Quest, { questType } from \"../quest/quest\";\r\nimport { QuestDone } from \"../questdone/questDone\";\r\n\r\ntype props = {\r\n  title: string;\r\n  items: questType[];\r\n};\r\n//gap-4 md:grid-cols-3 lg:grid-cols-4 2xl:grid-cols-5\r\nexport const QuestList: FC<props> = ({ title, items }: props) => {\r\n  return (\r\n    <div className=\"flex flex-col justify-center items-center w-[95%]\">\r\n      <div className=\"flex flex-col w-full justify-center items-center flex-wrap\">\r\n       <div className=\"w-full flex justify-start\"> <p className=\"mt-4 mb-4 text-lg text-left\">{title}</p></div>\r\n        <ul className=\"flex flex-col items-center justify-center gap-4 w-full flex-wrap md:flex-row md:justify-start \">\r\n          {items.map((item) => {\r\n            return (\r\n              <li\r\n                className=\"w-questMobile h-questMobile md:w-questDefault md:h-questDefault\"\r\n                key={item._id}\r\n              >\r\n                {item.isDone ? (\r\n                  <QuestDone\r\n                    category={item.category}\r\n                    date={item.date}\r\n                    isChallenge={item.isChallenge}\r\n                    level={item.level}\r\n                    title={item.title}\r\n                    _id={item._id}\r\n                    isDone={item.isDone}\r\n                  />\r\n                ) : (\r\n                  <Quest\r\n                    category={item.category}\r\n                    date={item.date}\r\n                    isChallenge={item.isChallenge}\r\n                    level={item.level}\r\n                    title={item.title}\r\n                    _id={item._id}\r\n                    isDone={item.isDone}\r\n                  />\r\n                )}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { FC, useEffect, useState } from \"react\";\r\nimport { AddButton } from \"../../components/buttons/addButton\";\r\nimport { Header } from \"../../components/header/header\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport Loader from \"../../components/loading/loader\";\r\nimport EmptyState from \"../../components/emptystate/emptyState\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport QuestForm from \"../../components/questform/questForm\";\r\nimport { actionGetAllQuests } from \"../../app/actions\";\r\nimport { questType } from \"../../components/quest/quest\";\r\nimport {\r\n  parseDate,\r\n  parsedToday,\r\n  parsedTomorrow,\r\n} from \"../../features/date/date\";\r\nimport { QuestList } from \"../../components/questlist/questList\";\r\n\r\nconst MainPage: FC = () => {\r\n  const isLoading = useAppSelector((state) => state.app.isLoading);\r\n  const token = useAppSelector((state) => state.app.userToken);\r\n  const items = useAppSelector((state) => state.app.items);\r\n  const dispatch = useAppDispatch();\r\n  const [open, setOpen] = useState(false);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleToggle = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  let todayItems: questType[] = [];\r\n  let tomorrowItems: questType[] = [];\r\n  let nextDaysItems: questType[] = [];\r\n  let unfulfilledItems: questType[] = [];\r\n  const completedQuests: questType[] = [];\r\n\r\n  items.forEach((item) => {\r\n    const itemDate = parseDate(item.date);\r\n    const today = parsedToday;\r\n    const tomorrow = parsedTomorrow;\r\n    if (item.isDone) {\r\n      completedQuests.push(item);\r\n    } else {\r\n      if (itemDate.getTime() === today.getTime()) {\r\n        todayItems.push(item);\r\n      } else if (itemDate.getTime() === tomorrow.getTime()) {\r\n        tomorrowItems.push(item);\r\n      } else if (itemDate.getTime() > tomorrow.getTime()) {\r\n        nextDaysItems.push(item);\r\n      } else if (itemDate.getTime() < today.getTime()) {\r\n        unfulfilledItems.push(item);\r\n      }\r\n    }\r\n  });\r\n\r\n  nextDaysItems.sort((a, b) => {\r\n    const aDate = parseDate(a.date);\r\n    const bDate = parseDate(b.date);\r\n    return aDate.getTime() - bDate.getTime();\r\n  });\r\n\r\n  unfulfilledItems.sort((a, b) => {\r\n    const aDate = parseDate(a.date);\r\n    const bDate = parseDate(b.date);\r\n    return aDate.getTime() - bDate.getTime();\r\n  });\r\n  completedQuests.sort((a, b) => {\r\n      const aDate = parseDate(a.date);\r\n      const bDate = parseDate(b.date);\r\n      return aDate.getTime() - bDate.getTime();\r\n  })\r\n  useEffect(() => {\r\n    dispatch(actionGetAllQuests(token));\r\n  }, [dispatch, token]);\r\n\r\n  return (\r\n    <div className=\" min-h-screen h-fit bg-darkwhite pb-8\">\r\n      <Header />\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <section className=\"relative flex flex-col flex-wrap  items-center font-Montserrat max-w-screen min-w-screen \">\r\n          {items.length > 0 ? (\r\n            <>\r\n              {unfulfilledItems.length > 0 && (\r\n                <QuestList items={unfulfilledItems} title={\"Time's up:\"} />\r\n              )}\r\n              {todayItems.length > 0 && (\r\n                <QuestList items={todayItems} title={\"Today:\"} />\r\n              )}\r\n              {tomorrowItems.length > 0 && (\r\n                <QuestList items={tomorrowItems} title={\"Tomorrow:\"} />\r\n              )}\r\n              {nextDaysItems.length > 0 && (\r\n                <QuestList items={nextDaysItems} title={\"Next days:\"} />\r\n              )}\r\n              {completedQuests.length > 0 && (\r\n                <QuestList items={completedQuests} title={\"Completed:\"} />\r\n              )}\r\n            </>\r\n          ) : (\r\n            <EmptyState />\r\n          )}\r\n          <AddButton text=\"+\" fn={handleToggle} />\r\n\r\n          <Backdrop\r\n            sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n            open={open}\r\n          >\r\n            <QuestForm\r\n              questCategory=\"stuff\"\r\n              questDate=\"\"\r\n              questLevel=\"easy\"\r\n              questTitle=\"\"\r\n              closeModalFn={handleClose}\r\n              id=\"\"\r\n              isQuestNew={true}\r\n              isChallenge={false}\r\n              isDone={false}\r\n            />\r\n          </Backdrop>\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default MainPage;\r\n"],"names":["className","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","color","AddButton","text","fn","onClick","title","Header","userName","useAppSelector","state","app","token","userToken","userFirstChar","charAt","dispatch","useAppDispatch","handleLogout","actionLogoutUser","localStorage","clear","Notiflix","src","image","alt","dateValue","setDateValue","isQuestChallenge","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","label","value","inputFormat","onChange","newValue","renderInput","params","TextField","sx","borderColor","svg","InputLabelProps","style","date","dayjs","parseDate","split","map","Number","day","month","year","Date","today","format","tomorrow","add","parsedToday","parsedTomorrow","DeleteModal","modalDeleteOpen","handleDelete","setModalOpen","Backdrop","justifyItems","alignItems","opacity","zIndex","theme","drawer","open","QuestDifficult","handleChangeLevel","questLevel","id","name","defaultValue","QuestCategory","questCategory","handleChangeCategories","ChallengeQuestButton","handleChallenge","QuestTitleInput","questTitle","maxLength","required","placeholder","DotLevel","dotColor","fill","SeparatorLine","ButtonCancel","closeModalFn","type","ButtonDelete","ButtonStartSave","isQuestNew","questDate","isChallenge","isDone","getDotColor","level","formatDate","useState","dateCalendar","setDateCalendar","setDotColor","userEmail","setQuestChallenge","handleSubmit","e","preventDefault","form","target","dataQuest","difficult","category","categories","actionAddQuest","reset","handleEdit","data","dataPayload","owner","actionEditQuest","onSubmit","selectForm","currentTarget","selectedOption","background","option","payloadData","actionDeleteQuest","QuestLevel","dotClass","size","toUpperCase","slice","backgroundStyle","firstLetterUppercase","QuestTitle","QuestDate","icon","parsedDate","getTime","ButtonDone","openModalComplete","_id","openModalEdit","setOpenModalEdit","setOpenModalComplete","completeQuest","position","top","QuestDoneTitle","truncatedText","length","substring","QuestDone","QuestList","items","item","isLoading","setOpen","todayItems","tomorrowItems","nextDaysItems","unfulfilledItems","completedQuests","forEach","itemDate","push","sort","a","b","aDate","bDate","useEffect","actionGetAllQuests"],"sourceRoot":""}