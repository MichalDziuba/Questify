{"version":3,"file":"static/js/509.81733115.chunk.js","mappings":"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","sources":["components/loading/loader.tsx","components/buttons/startPageButton.tsx","components/input/landing/landingInput.tsx","components/buttons/goButton.tsx","pages/start/forms/loginForm/login.tsx","pages/start/forms/registerForm/register.tsx","pages/start/startPage.tsx"],"sourcesContent":["import {  Puff } from \"react-loader-spinner\";\r\nimport { FC } from \"react\";\r\n\r\nconst Loading:FC = () => {\r\n    return (\r\n      <div className=\"w-screen h-screen flex items-center justify-center bg-black opacity-80\">\r\n        <Puff\r\n          visible={true}\r\n          height=\"180\"\r\n          width=\"1000\"\r\n          ariaLabel=\"dna-loading\"\r\n          wrapperStyle={{}}\r\n          wrapperClass=\"dna-wrapper\"\r\n          color=\"#00D7FF\"\r\n        />\r\n      </div>\r\n    );\r\n}\r\nexport default Loading;","\r\ntype props = {\r\n  title: string;\r\n  fn: () => void;\r\n\r\n};\r\nexport const StartPageButton = ({ title, fn }: props) => {\r\n  return (\r\n    <button\r\n      className=\"bg-orange rounded text-lg text-white font-medium font-Roboto\r\n       w-32 h-8\"\r\n      onClick={fn}\r\n    >\r\n      {title}\r\n    </button>\r\n  );\r\n};\r\n\r\n","import { FC } from \"react\";\r\n\r\n type props= {\r\n    title: string;\r\n    name: string;\r\n    required?: boolean;\r\n    type:string;\r\n}\r\n\r\nconst Input: FC<props> = ({ title,name,required,type }) => {\r\n    return (\r\n        <input\r\n            name={name}\r\n            className=\"border-b-2 border-azure text-azure placeholder:text-azure outline-0 text-lg pl-2 w-full\"\r\n            placeholder={title}\r\n            required={required}\r\n            type={type}\r\n            autoComplete=\"new-password\"\r\n      />\r\n    );\r\n}\r\nexport default Input;","import { FC } from \"react\";\r\ntype props={\r\n  text:string\r\n}\r\n\r\nexport const GoButton: FC<props> = ({text}) => {\r\n    return (\r\n        <button\r\n              className=\"rounded-full bg-orange w-14 h-14 font-Roboto text-xl text-white font-medium mt-8 absolute bottom-[-50px] \"\r\n              type=\"submit\"\r\n            >\r\n              {text}\r\n            </button>\r\n    )\r\n}\r\n","import { FC, FormEvent } from \"react\";\r\nimport Input from \"../../../../components/input/landing/landingInput\";\r\nimport { GoButton } from \"../../../../components/buttons/goButton\";\r\n\r\ntype props = {\r\n  fn: (e: FormEvent<HTMLFormElement>) => void;\r\n};\r\n\r\nexport const Login: FC<props> = ({ fn }) => {\r\n  return (\r\n    <form\r\n      className=\"flex flex-col w-full justify-center items-center mt-6 min-h-[208px] relative\"\r\n      onSubmit={fn}\r\n    >\r\n      <Input\r\n        title=\"Email\"\r\n        name=\"email\"\r\n        // required={true}\r\n        type=\"email\"\r\n      />\r\n      <Input\r\n        title=\"Password\"\r\n        name=\"password\"\r\n        // required={true}\r\n        type=\"password\"\r\n      />\r\n      <GoButton text=\"Go!\" />\r\n    </form>\r\n  );\r\n};\r\n","import { FC, FormEvent } from \"react\";\r\nimport Input from \"../../../../components/input/landing/landingInput\";\r\nimport { GoButton } from \"../../../../components/buttons/goButton\";\r\ntype props = {\r\n  fn: (e: FormEvent<HTMLFormElement>) => void;\r\n};\r\n\r\nconst Register: FC<props> = ({ fn }) => {\r\n  return (\r\n    <form\r\n      className=\"flex flex-col w-full justify-center items-center mt-6 min-h-[208px] relative\"\r\n      onSubmit={fn}\r\n    >\r\n      <Input title=\"Name\" name=\"userName\" required={true} type=\"text\" />\r\n      <Input title=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n      <Input title=\"Password\" name=\"password\" required={true} type=\"password\"/>\r\n      <Input\r\n        title=\"Confirm password\"\r\n        name=\"passwordRepeat\"\r\n        required={true}\r\n        type=\"password\"\r\n      />\r\n      <GoButton text=\"Go!\" />\r\n    </form>\r\n  );\r\n};\r\nexport default Register;\r\n","import Notiflix from \"notiflix\";\r\nimport { FormEvent, useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { actionLoginUser, actionRegisterUser } from \"../../app/actions\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport {StartPageButton} from \"../../components/buttons/startPageButton\";\r\nimport { Login } from \"./forms/loginForm/login\";\r\nimport Register from \"./forms/registerForm/register\";\r\nimport Loader from \"../../components/loading/loader\";\r\n\r\ntype registerData = {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n};\r\ntype loginData = {\r\n  email: string;\r\n  password: string;\r\n};\r\ntype entryName = \"login\" | \"register\";\r\n\r\ntype entryForm = {\r\n  register: entryName;\r\n  login: entryName;\r\n};\r\n\r\nconst StartPage= () => {\r\n\r\n  const landingForms: entryForm = {\r\n    register: \"register\",\r\n    login: \"login\",\r\n  };\r\n\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n  const token = useAppSelector((state) => state.app.userToken);\r\n  const isLoading = useAppSelector((state) => state.app.isLoading);\r\n\r\n  const [activeForm, setActiveForm] = useState(landingForms.register);\r\n\r\n  const handleRegister = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    const name = form.userName.value;\r\n    const email = form.email.value;\r\n    const password = form.password.value;\r\n    const passwordRepeat = form.passwordRepeat.value;\r\n    if (password !== passwordRepeat) {\r\n      Notiflix.Notify.failure(\"The passwords are not the same. Try again.\");\r\n    } else {\r\n      const data: registerData = {\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n      };\r\n      dispatch(actionRegisterUser(data));\r\n    }\r\n  };\r\n  const handleLogin = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    const form = e.currentTarget;\r\n    const email = form.email.value;\r\n    const password = form.password.value;\r\n\r\n    const data: loginData = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n    await dispatch(actionLoginUser(data));\r\n    await navigate(\"/\");\r\n  };\r\n  useEffect(() => {\r\n    if (token) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [navigate, token]);\r\n\r\n  return (\r\n    <section className=\"h-screen w-screen flex background justify-center \">\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"ml-2 mr-2 md:w-1/2\">\r\n          <h1 className=\" font-bold text-2xl text-azure mt-12\">Questify</h1>\r\n          <div className=\"font-Montserrat mt-8\">\r\n            <div className=\"  text-xl text-black text-center font-semibold\">\r\n              Questify will turn your life into a thrilling game full of amazing\r\n              quests and exciting challenges.\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center justify-center w-full\"></div>\r\n          <div className=\"flex flex-col w-full justify-center items-center mt-12\">\r\n            <div className=\" text-lg text-gray text-center font-Montserrat pb-4\">\r\n              Choose you want to sign up or log in!\r\n            </div>\r\n            <ul className=\"flex justify-around w-full mt-8\">\r\n              <li>\r\n                <StartPageButton\r\n                  title=\"Login\"\r\n                  fn={() => setActiveForm(landingForms.login)}\r\n                />\r\n              </li>\r\n              <li>\r\n                <StartPageButton\r\n                  title=\"Register\"\r\n                  fn={() => setActiveForm(landingForms.register)}\r\n                />\r\n              </li>\r\n            </ul>\r\n            {activeForm === landingForms.register ? (\r\n              <Register fn={handleRegister} />\r\n            ) : (\r\n              <Login fn={handleLogin} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\nexport default StartPage;\r\n"],"names":["className","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","color","StartPageButton","title","fn","onClick","name","required","type","placeholder","autoComplete","GoButton","text","Login","onSubmit","landingForms","dispatch","useAppDispatch","navigate","useNavigate","token","useAppSelector","state","app","userToken","isLoading","useState","activeForm","setActiveForm","handleRegister","e","preventDefault","form","currentTarget","userName","value","email","password","passwordRepeat","Notiflix","data","actionRegisterUser","handleLogin","actionLoginUser","useEffect"],"sourceRoot":""}